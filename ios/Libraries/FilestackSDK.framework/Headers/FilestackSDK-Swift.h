// Generated by Apple Swift version 4.1.2 (swiftlang-902.0.54 clang-902.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import Dispatch;
@import Foundation;
@import UIKit;
#endif

#import <FilestackSDK/FilestackSDK.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="FilestackSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// :nodoc:
SWIFT_CLASS_NAMED("Transform")
@interface FSTransform : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Converts a video or audio to a different format, resolution, sample rate, etc.
SWIFT_CLASS_NAMED("AVTransform")
@interface FSAVTransform : FSTransform
@end


/// Converts the image to black and white.
SWIFT_CLASS_NAMED("AsciiTransform")
@interface FSAsciiTransform : FSTransform
@end


/// Converts the image to black and white.
SWIFT_CLASS_NAMED("BlackAndWhiteTransform")
@interface FSBlackAndWhiteTransform : FSTransform
@end


/// Blur selected faces contained inside an image.
SWIFT_CLASS_NAMED("BlurFacesTransform")
@interface FSBlurFacesTransform : FSTransform
@end


/// Applies a blurring effect to the image.
SWIFT_CLASS_NAMED("BlurTransform")
@interface FSBlurTransform : FSTransform
@end


/// Applies a border effect to the image.
SWIFT_CLASS_NAMED("BorderTransform")
@interface FSBorderTransform : FSTransform
@end


/// Takes the file or files that are passed into it and compresses them into a zip file.
SWIFT_CLASS_NAMED("CacheTransform")
@interface FSCacheTransform : FSTransform
@end


/// Applies a circle border effect to the image.
SWIFT_CLASS_NAMED("CircleTransform")
@interface FSCircleTransform : FSTransform
@end

@class FSSecurity;
enum FSStorageLocation : NSUInteger;

/// Represents a client that allows communicating with the
/// <a href="https://www.filestack.com/docs/rest-api">Filestack REST API</a>.
SWIFT_CLASS_NAMED("Client")
@interface FSClient : NSObject
/// Default initializer.
/// seealso:
/// <code>Security</code>
/// \param apiKey An API key obtained from the Developer Portal.
///
/// \param security A <code>Security</code> object. <code>nil</code> by default.
///
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey security:(FSSecurity * _Nullable)security OBJC_DESIGNATED_INITIALIZER;
/// Initializer with security and storage location.
/// seealso:
/// <code>Security</code>
/// \param apiKey An API key obtained from the Developer Portal.
///
/// \param security A <code>Security</code> object. <code>nil</code> by default.
///
/// \param storage A <code>StorageLocation</code> object.
///
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey security:(FSSecurity * _Nullable)security storage:(enum FSStorageLocation)storage OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface FSClient (SWIFT_EXTENSION(FilestackSDK))
/// Returns a <code>String</code> representation of self.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// The collage task accepts an array of Filestack file handles, storage aliases, or external urls.
/// These files are appended in given order to the base file of the transformation URL.
/// Altogther the base image and the passed files are the images that will comprise the collage.
/// The order in which they are added dictates how the images will be arranged.
SWIFT_CLASS_NAMED("CollageTransform")
@interface FSCollageTransform : FSTransform
@end


/// Class that is used for creating and sanitizing collection of file handles, storage aliases, or external urls.
/// See also: ‘CollageTransform’
SWIFT_CLASS_NAMED("CollageTransformCollection")
@interface FSCollageTransformCollection : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Work only with png and JPG files.
/// Utilizes mozjpeg to offer improved compression for jpgs over the algorithm used for output=compress:true.
/// It will not attempt to re-compress a previously compressed image.
/// For the best results, compress should be the last task in your transformation chain.
SWIFT_CLASS_NAMED("CompressTransform")
@interface FSCompressTransform : FSTransform
@end


/// Converts the image to a different format.
/// Matrix of supported conversions can be found here: https://cdn.filestackcontent.com/UPqbkTIETnGaQJa1nqnG?dl=true
SWIFT_CLASS_NAMED("ConvertTransform")
@interface FSConvertTransform : FSTransform
@end


/// Crops selected faces contained inside an image.
SWIFT_CLASS_NAMED("CropFacesTransform")
@interface FSCropFacesTransform : FSTransform
@end


/// Crops the image to a specified rectangle.
SWIFT_CLASS_NAMED("CropTransform")
@interface FSCropTransform : FSTransform
@end


/// Detects the faces contained inside an image.
SWIFT_CLASS_NAMED("DetectFacesTransform")
@interface FSDetectFacesTransform : FSTransform
@end


/// Smartly analyzes a photo and performs color correction and other enhancements to improve the overall quality of the image.
SWIFT_CLASS_NAMED("EnhanceTransform")
@interface FSEnhanceTransform : FSTransform
@end

@class FSNetworkJSONResponse;

/// Represents a <code>FileLink</code> object.
/// See <a href="https://www.filestack.com/docs/file-architecture">Filestack Architecture Overview</a> for more information
/// about files.
SWIFT_CLASS_NAMED("FileLink")
@interface FSFileLink : NSObject
/// Gets metadata associated to this <code>Filelink</code> as a JSON payload.
/// \param options The options that should be included as part of the response.
///
/// \param queue The queue on which the completion handler is dispatched.
///
/// \param completionHandler Adds a handler to be called once the request has finished.
///
- (void)getMetadataWithOptions:(FSMetadataOptions)options queue:(dispatch_queue_t _Nullable)queue completionHandler:(void (^ _Nonnull)(FSNetworkJSONResponse * _Nonnull))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface FSFileLink (SWIFT_EXTENSION(FilestackSDK))
/// Returns a <code>String</code> representation of self.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Flips/mirrors the image vertically.
SWIFT_CLASS_NAMED("FlipTransform")
@interface FSFlipTransform : FSTransform
@end


/// Flips/mirrors the image horizontally.
SWIFT_CLASS_NAMED("FlopTransform")
@interface FSFlopTransform : FSTransform
@end


/// Change image brightness, saturation and hue.
SWIFT_CLASS_NAMED("ModulateTransform")
@interface FSModulateTransform : FSTransform
@end


/// Converts the image to monochrome.
SWIFT_CLASS_NAMED("MonochromeTransform")
@interface FSMonochromeTransform : FSTransform
@end


/// :nodoc:
SWIFT_CLASS_NAMED("MultifileUpload")
@interface FSMultifileUpload : NSObject
/// Cancels multifile upload request. Canceling won’t delete already uploaded files - only cancel current upload and upload of all files not uploaded yet. This will trigger completionHandler.
- (void)cancel;
/// Start uploading files.
- (void)uploadFiles;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




/// :nodoc:
SWIFT_CLASS_NAMED("MultipartUpload")
@interface FSMultipartUpload : NSObject
/// Cancels a multipart upload request.
- (void)cancel;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// The image returned by this transformation creates a negative image by portraying the lightest area as the darkest and the darkest areas as the lightest.
SWIFT_CLASS_NAMED("NegativeTransform")
@interface FSNegativeTransform : FSTransform
@end


/// This object represents a network data response.
SWIFT_CLASS_NAMED("NetworkDataResponse")
@interface FSNetworkDataResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface FSNetworkDataResponse (SWIFT_EXTENSION(FilestackSDK))
/// Returns a <code>String</code> representation of self.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// This object represents a network download response.
SWIFT_CLASS_NAMED("NetworkDownloadResponse")
@interface FSNetworkDownloadResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface FSNetworkDownloadResponse (SWIFT_EXTENSION(FilestackSDK))
/// Returns a <code>String</code> representation of self.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// This object represents a network JSON response.
SWIFT_CLASS_NAMED("NetworkJSONResponse")
@interface FSNetworkJSONResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface FSNetworkJSONResponse (SWIFT_EXTENSION(FilestackSDK))
/// Returns a <code>String</code> representation of self.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Removes any metadata embedded in an image.
SWIFT_CLASS_NAMED("NoMetadataTransform")
@interface FSNoMetadataTransform : FSTransform
@end


/// Change the image to look like it was oil painted.
SWIFT_CLASS_NAMED("OilPaintTransform")
@interface FSOilPaintTransform : FSTransform
@end


/// Change image brightness, saturation and hue.
SWIFT_CLASS_NAMED("PartialBlurTransform")
@interface FSPartialBlurTransform : FSTransform
@end


/// Change image brightness, saturation and hue.
SWIFT_CLASS_NAMED("PartialPixelateTransform")
@interface FSPartialPixelateTransform : FSTransform
@end


/// Pixelates selected faces contained inside an image.
SWIFT_CLASS_NAMED("PixelateFacesTransform")
@interface FSPixelateFacesTransform : FSTransform
@end


/// Pixelates the image.
SWIFT_CLASS_NAMED("PixelateTransform")
@interface FSPixelateTransform : FSTransform
@end


/// Applies a Polaroid border effect to the image.
SWIFT_CLASS_NAMED("PolaroidTransform")
@interface FSPolaroidTransform : FSTransform
@end


/// Represents a policy object.
/// See <a href="https://www.filestack.com/docs/security/creating-policies">Creating Policies</a> for more
/// information about policies.
SWIFT_CLASS_NAMED("Policy")
@interface FSPolicy : NSObject
/// Convenience initializer with expiry time.
- (nonnull instancetype)initWithExpiry:(NSDate * _Nonnull)expiry;
/// Convenience initializer with expiry time and call permissions.
- (nonnull instancetype)initWithExpiry:(NSDate * _Nonnull)expiry call:(FSPolicyCall)call;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface FSPolicy (SWIFT_EXTENSION(FilestackSDK))
/// Returns a <code>String</code> representation of self.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Convert an image to progressive JPEG. This is ideal for large images that will be displayed while downloading over a slow connection, allowing a reasonable preview after receiving only a portion of the data. However, support for progressive JPEGs is not universal. When progressive JPEGs are received by programs that do not support them (such as versions of Internet Explorer before Windows 7) the software displays the image only after it has been completely downloaded.
SWIFT_CLASS_NAMED("ProgressiveJpegTransform")
@interface FSProgressiveJpegTransform : FSTransform
@end


/// Set the quality of your JPG or WEBP image without the danger of possibly generating
/// a larger file.
SWIFT_CLASS_NAMED("QualityTransform")
@interface FSQualityTransform : FSTransform
@end


/// Removes the red eye effect from photos.
SWIFT_CLASS_NAMED("RedEyeRemovalTransform")
@interface FSRedEyeRemovalTransform : FSTransform
@end


/// Resizes the image to a given width and height using a particular fit and alignment mode.
SWIFT_CLASS_NAMED("ResizeTransform")
@interface FSResizeTransform : FSTransform
@end


/// Rotates an image in a range from 0 to 359 degrees or based on Exif information.
SWIFT_CLASS_NAMED("RotateTransform")
@interface FSRotateTransform : FSTransform
@end


/// Rounds the image’s corners.
SWIFT_CLASS_NAMED("RoundCornersTransform")
@interface FSRoundCornersTransform : FSTransform
@end


/// Returns JSON with flag saying if image if safe to display.
/// Possible values: { “sfw”: true } or { “sfw”: false } depending on detected content.
SWIFT_CLASS_NAMED("SecureForWorkTransform")
@interface FSSecureForWorkTransform : FSTransform
@end


/// Represents a security object.
/// See <a href="https://www.filestack.com/docs/security">Security Overview</a> for more information
/// about security.
SWIFT_CLASS_NAMED("Security")
@interface FSSecurity : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface FSSecurity (SWIFT_EXTENSION(FilestackSDK))
/// Returns a <code>String</code> representation of self.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Converts the image to sepia color.
SWIFT_CLASS_NAMED("SepiaTransform")
@interface FSSepiaTransform : FSTransform
@end


/// Applies a shadow border effect to the image.
SWIFT_CLASS_NAMED("ShadowTransform")
@interface FSShadowTransform : FSTransform
@end


/// Applies a sharpening effect to the image.
SWIFT_CLASS_NAMED("SharpenTransform")
@interface FSSharpenTransform : FSTransform
@end

/// Represents the storage access to a file.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSStorageAccess, "StorageAccess") {
/// Private
  FSStorageAccessPrivate = 0,
/// Public
  FSStorageAccessPublic = 1,
};

/// Represents a cloud storage location type.
/// See <a href="https://www.filestack.com/docs/cloud-storage/">CloudStorage</a> for more information
/// about cloud storage locations.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSStorageLocation, "StorageLocation") {
/// Amazon S3
  FSStorageLocationS3 = 0,
/// Dropbox
  FSStorageLocationDropbox = 1,
/// Rackspace
  FSStorageLocationRackspace = 2,
/// Azure
  FSStorageLocationAzure = 3,
/// Google Cloud Storage
  FSStorageLocationGcs = 4,
};


/// Represents a set of storage options.
SWIFT_CLASS_NAMED("StorageOptions")
@interface FSStorageOptions : NSObject
/// Convenience initializer (for Objective-C).
- (nonnull instancetype)initWithLocation:(enum FSStorageLocation)location;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Returns JSON with tag generated after analysis of image.
/// Example: { “tags”: { “auto”: { “cat”: 98,
/// “cat like mammal”:77,
/// “close up”:78,
/// “european shorthair”:68,
/// “fauna”:84,
/// “mammal”:93,
/// “small to medium sized cats”:76,
/// “tabby cat”:72,
/// “vertebrate”:92,
/// “whiskers”:92 }}}
SWIFT_CLASS_NAMED("TagsTransform")
@interface FSTagsTransform : FSTransform
@end


/// Applies a torn edge border effect to the image.
SWIFT_CLASS_NAMED("TornEdgesTransform")
@interface FSTornEdgesTransform : FSTransform
@end






/// Represents an image transform alignment type.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSTransformAlign, "TransformAlign") {
/// Center
  FSTransformAlignCenter = 0,
/// Top
  FSTransformAlignTop = 1,
/// Bottom
  FSTransformAlignBottom = 2,
/// Left
  FSTransformAlignLeft = 3,
/// Right
  FSTransformAlignRight = 4,
/// Faces
  FSTransformAlignFaces = 5,
};

/// Represents an image transform aspect type.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSTransformAspectMode, "TransformAspectMode") {
/// Preserve
  FSTransformAspectModePreserve = 0,
/// Constrain
  FSTransformAspectModeConstrain = 1,
/// Letterbox
  FSTransformAspectModeLetterbox = 2,
/// Pad
  FSTransformAspectModePad = 3,
/// Crop
  FSTransformAspectModeCrop = 4,
};

/// Represents an image transform blur type.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSTransformBlurMode, "TransformBlurMode") {
/// Linear
  FSTransformBlurModeLinear = 0,
/// Gaussian
  FSTransformBlurModeGaussian = 1,
};

/// Represents an image transform color space type.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSTransformColorSpace, "TransformColorSpace") {
/// RGB
  FSTransformColorSpaceRgb = 0,
/// CMYK
  FSTransformColorSpaceCmyk = 1,
/// Input
  FSTransformColorSpaceInput = 2,
};

/// Represents an image transform crop type.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSTransformCropMode, "TransformCropMode") {
/// Thumb
  FSTransformCropModeThumb = 0,
/// Crop
  FSTransformCropModeCrop = 1,
/// Fill
  FSTransformCropModeFill = 2,
};

/// Represents an image transform noise reduction type.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSTransformFiletype, "TransformFiletype") {
/// doc
  FSTransformFiletypeDoc = 0,
/// docx
  FSTransformFiletypeDocx = 1,
/// HTML
  FSTransformFiletypeHtml = 2,
/// JPG
  FSTransformFiletypeJpg = 3,
/// opd
  FSTransformFiletypeOdp = 4,
/// ods
  FSTransformFiletypeOds = 5,
/// odt
  FSTransformFiletypeOdt = 6,
/// pjpg
  FSTransformFiletypePjpg = 7,
/// pdf
  FSTransformFiletypePdf = 8,
/// png
  FSTransformFiletypePng = 9,
/// ppt
  FSTransformFiletypePpt = 10,
/// pptx
  FSTransformFiletypePptx = 11,
/// svg
  FSTransformFiletypeSvg = 12,
/// txt
  FSTransformFiletypeTxt = 13,
/// webp
  FSTransformFiletypeWebp = 14,
/// xls
  FSTransformFiletypeXls = 15,
/// xlsx
  FSTransformFiletypeXlsx = 16,
};

/// Represents an image transform fit type.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSTransformFit, "TransformFit") {
/// Clip
  FSTransformFitClip = 0,
/// Crop
  FSTransformFitCrop = 1,
/// Scale
  FSTransformFitScale = 2,
/// Max
  FSTransformFitMax = 3,
};

/// Represents an image transform noise reduction type.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSTransformNoiseMode, "TransformNoiseMode") {
/// None
  FSTransformNoiseModeNone = 0,
/// Low
  FSTransformNoiseModeLow = 1,
/// Medium
  FSTransformNoiseModeMedium = 2,
/// High
  FSTransformNoiseModeHigh = 3,
};

/// Represents an image transform page format type.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSTransformPageFormat, "TransformPageFormat") {
/// A3
  FSTransformPageFormatA3 = 0,
/// A4
  FSTransformPageFormatA4 = 1,
/// A5
  FSTransformPageFormatA5 = 2,
/// B4
  FSTransformPageFormatB4 = 3,
/// B5
  FSTransformPageFormatB5 = 4,
/// Letter
  FSTransformPageFormatLetter = 5,
/// Legal
  FSTransformPageFormatLegal = 6,
/// Tabloid
  FSTransformPageFormatTabloid = 7,
};

/// Represents an image transform page orientation type.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSTransformPageOrientation, "TransformPageOrientation") {
/// Portrait
  FSTransformPageOrientationPortrait = 0,
/// Landscape
  FSTransformPageOrientationLandscape = 1,
};

/// Represents an image transform pixelate faces type.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSTransformShapeType, "TransformShapeType") {
/// Rect
  FSTransformShapeTypeRect = 0,
/// Oval
  FSTransformShapeTypeOval = 1,
};

/// Represents an image transform style type.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSTransformStyleMode, "TransformStyleMode") {
/// Artwork
  FSTransformStyleModeArtwork = 0,
/// Photo
  FSTransformStyleModePhoto = 1,
};


/// Represents an <code>Transformable</code> object.
/// See <a href="https://www.filestack.com/docs/image-transformations">Image Transformations Overview</a> for more information
/// about image transformations.
SWIFT_CLASS_NAMED("Transformable")
@interface FSTransformable : NSObject
/// Adds a new transformation to the transformation chain.
/// \param transform The <code>Transform</code> to add.
///
- (nonnull instancetype)add:(FSTransform * _Nonnull)transform;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




/// Upscalling image making it two times bigger.
SWIFT_CLASS_NAMED("UpscaleTransform")
@interface FSUpscaleTransform : FSTransform
@end


/// Captures content of given URL.
/// The URL screenshot task will not work for content that is located in areas that require you to login.
/// If the content is not publicly visible, then it will not be captured.
SWIFT_CLASS_NAMED("UrlScreenshotTransform")
@interface FSUrlScreenshotTransform : FSTransform
@end


/// Applies a vignette border effect to the image.
SWIFT_CLASS_NAMED("VignetteTransform")
@interface FSVignetteTransform : FSTransform
@end


/// Watermarks the image by overlaying another image on top of your main image.
SWIFT_CLASS_NAMED("WatermarkTransform")
@interface FSWatermarkTransform : FSTransform
@end


/// Takes the file or files that are passed into it and compresses them into a zip file.
SWIFT_CLASS_NAMED("ZipTransform")
@interface FSZipTransform : FSTransform
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
