// Generated by Apple Swift version 4.2.1 (swiftlang-1000.11.42 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import AVFoundation;
@import FilestackSDK;
@import Foundation;
@import ObjectiveC;
@import Photos;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Filestack",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




/// This protocol is implemented by any classes representing a request that can be cancelled.
SWIFT_PROTOCOL_NAMED("CancellableRequest")
@protocol FSCancellableRequest
/// Any cancellable requests must implement the <code>cancel()</code> function.
- (void)cancel;
@end

@class FSSecurity;
@class FSConfig;

/// The <code>Client</code> class provides an unified API to upload files and manage cloud contents using Filestack REST APIs.
SWIFT_CLASS_NAMED("Client")
@interface FSFilestackClient : NSObject
/// Default initializer.
/// \param apiKey An API key obtained from the Developer Portal.
///
/// \param security A <code>Security</code> object. <code>nil</code> by default.
///
/// \param config A <code>Config</code> object. <code>nil</code> by default.
///
/// \param token A token obtained from <code>lastToken</code> to use initially. This could be useful to avoid
/// authenticating against a cloud provider assuming that the passed token has not yet expired.
///
- (nonnull instancetype)initWithApiKey:(NSString * _Nonnull)apiKey security:(FSSecurity * _Nullable)security config:(FSConfig * _Nullable)config token:(NSString * _Nullable)token OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

/// Represents a cloud provider.
typedef SWIFT_ENUM_NAMED(NSUInteger, FSCloudProvider, "CloudProvider", closed) {
/// Facebook
  FSCloudProviderFacebook = 0,
/// Instagram
  FSCloudProviderInstagram = 1,
/// Google Drive
  FSCloudProviderGoogleDrive = 2,
/// Dropbox
  FSCloudProviderDropbox = 3,
/// Box
  FSCloudProviderBox = 4,
/// GitHub
  FSCloudProviderGitHub = 5,
/// Gmail
  FSCloudProviderGmail = 6,
/// Google Photos
  FSCloudProviderGooglePhotos = 7,
/// OneDrive
  FSCloudProviderOneDrive = 8,
/// Amazon Drive
  FSCloudProviderAmazonDrive = 9,
/// Custom Source
  FSCloudProviderCustomSource = 10,
};


/// :nodoc:
SWIFT_PROTOCOL_NAMED("CloudResponse")
@protocol FSCloudResponse
@property (nonatomic, readonly) NSError * _Nullable error;
@property (nonatomic, readonly, copy) NSURL * _Nullable authURL;
@end


/// Represents a type of cloud source to be used in the picker.
SWIFT_CLASS_NAMED("CloudSource")
@interface FSCloudSource : NSObject
/// Returns a <code>String</code> representation of self.
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// The <code>Config</code> class is used together with <code>Client</code> to configure certain aspects of the API.
SWIFT_CLASS_NAMED("Config")
@interface FSConfig : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("Builder")
@interface FSConfigBuilder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This class represents a response obtained from a cloud folder list request.
SWIFT_CLASS_NAMED("FolderListResponse")
@interface FSFolderListResponse : NSObject <FSCloudResponse>
/// A redirect URL to a cloud providerâ€™s OAuth page. Typically this is only required internally.
@property (nonatomic, readonly, copy) NSURL * _Nullable authURL;
/// An error response. Optional.
@property (nonatomic, readonly) NSError * _Nullable error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

/// Represents an image URL export preset.
typedef SWIFT_ENUM_NAMED(NSInteger, FSImageURLExportPreset, "ImageURLExportPreset", closed) {
/// A preset for converting HEIF formatted images to JPEG.
  FSImageURLExportPresetCompatible = 0,
/// A preset for passing image data as-is to the client.
  FSImageURLExportPresetCurrent = 1,
};

/// :nodoc:
typedef SWIFT_ENUM_NAMED(NSUInteger, FSLocalProvider, "LocalProvider", closed) {
/// Camera
  FSLocalProviderCamera = 0,
/// Photo Library
  FSLocalProviderPhotoLibrary = 1,
/// Documents
  FSLocalProviderDocuments = 2,
};


/// Represents a type of local source to be used in the picker.
SWIFT_CLASS_NAMED("LocalSource")
@interface FSLocalSource : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// This class represents a response obtained from a cloud logout request.
SWIFT_CLASS("_TtC9Filestack14LogoutResponse")
@interface LogoutResponse : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface FSMultifileUpload (SWIFT_EXTENSION(Filestack)) <FSCancellableRequest>
@end


@interface FSMultipartUpload (SWIFT_EXTENSION(Filestack)) <FSCancellableRequest>
@end





@class UIViewController;
@class NSBundle;
@class NSCoder;

/// This class represents a navigation controller containing UI elements that allow picking files from local and cloud
/// sources.
SWIFT_CLASS_NAMED("PickerNavigationController")
@interface FSPickerNavigationController : UINavigationController
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@class FSStoreResponse;
@class FSNetworkJSONResponse;

/// This protocol contains the function signatures any <code>PickerNavigationController</code> delegate should conform to.
SWIFT_PROTOCOL_NAMED("PickerNavigationControllerDelegate")
@protocol FSPickerNavigationControllerDelegate
/// Called when the picker finishes storing a file originating from a cloud source in the destination storage location.
- (void)pickerStoredFileWithPicker:(FSPickerNavigationController * _Nonnull)picker response:(FSStoreResponse * _Nonnull)response;
/// Called when the picker finishes uploading a file originating from the local device in the destination storage location.
- (void)pickerUploadedFilesWithPicker:(FSPickerNavigationController * _Nonnull)picker responses:(NSArray<FSNetworkJSONResponse *> * _Nonnull)responses;
@end


/// This class represents a response obtained from a cloud store request.
SWIFT_CLASS_NAMED("StoreResponse")
@interface FSStoreResponse : NSObject <FSCloudResponse>
/// A redirect URL to a cloud providerâ€™s OAuth page. Typically this is only required internally.
@property (nonatomic, readonly, copy) NSURL * _Nullable authURL;
/// An error response. Optional.
@property (nonatomic, readonly) NSError * _Nullable error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Object used to pass set colors, fonts and defaults style of Picker.
SWIFT_CLASS_NAMED("Stylizer")
@interface FSStylizer : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

































#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
